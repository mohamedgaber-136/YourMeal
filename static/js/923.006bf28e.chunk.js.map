{"version":3,"file":"static/js/923.006bf28e.chunk.js","mappings":"yQACaA,EAAaC,EAAAA,KAAaC,MAAM,CACzCC,KAAKF,EAAAA,KAAaG,WAClBC,MAAMJ,EAAAA,KAAaI,QAAQD,WAC3BE,SAASL,EAAAA,KAAaM,IAAI,GAAGC,IAAI,IAAIJ,a,uCC8EzC,EA1EiB,WACf,IAAMK,GAAWC,EAAAA,EAAAA,MAEbC,IADIC,EAAAA,EAAAA,KAAY,SAACC,GAAK,OAAKA,EAAMC,IAAI,KAC1BC,EAAAA,EAAAA,OACTC,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAK,IAAAR,EAAA,OAAAK,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAO1B,OANDJ,EAAMK,iBACFb,EAAO,CACTX,KAAMmB,EAAMM,OAAO,GAAGC,MACtBxB,MAAOiB,EAAMM,OAAO,GAAGC,MACvBvB,SAAUgB,EAAMM,OAAO,GAAGC,MAC1BC,SAAS,IACVN,EAAAE,KAAA,EACqB1B,EAAW+B,QAAQjB,GAAM,KAAD,EAAjCU,EAAAQ,OAEXrB,GAASsB,EAAAA,EAAAA,GAAQnB,IACjBL,EAAS,WACV,wBAAAe,EAAAU,OAAA,GAAAb,EAAA,KAIF,gBAhBac,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAmBd,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mFAAkFC,UAC/FC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+CAA8CC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAKI,IAAKC,EAAOC,IAAI,cAAcC,MAAO,OAAQC,OAAQ,YAE5DL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sFAAqFC,SAAA,EAClGF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJC,EAAAA,EAAAA,MAACM,EAAAA,EAAI,CACHC,SAAUhC,EACVuB,UAAU,mEAAkEC,SAAA,EAE5EF,EAAAA,EAAAA,KAACS,EAAAA,EAAKE,MAAK,CAACV,UAAU,OAAOW,UAAU,4BAA2BV,UAChEF,EAAAA,EAAAA,KAACS,EAAAA,EAAKI,QAAO,CACXC,KAAK,OACLC,YAAY,WACZlD,KAAK,WACLoC,UAAU,yBAGdD,EAAAA,EAAAA,KAACS,EAAAA,EAAKE,MAAK,CAACV,UAAU,OAAOW,UAAU,4BAA2BV,UAChEF,EAAAA,EAAAA,KAACS,EAAAA,EAAKI,QAAO,CACXC,KAAK,QACLjD,KAAK,QACLkD,YAAY,uBACZd,UAAU,yBAGdD,EAAAA,EAAAA,KAACS,EAAAA,EAAKE,MAAK,CAACV,UAAU,OAAOW,UAAU,4BAA2BV,UAChEF,EAAAA,EAAAA,KAACS,EAAAA,EAAKI,QAAO,CACXC,KAAK,WACLjD,KAAK,WACLkD,YAAY,WACZd,UAAU,oBACVe,aAAa,gBAIjBhB,EAAAA,EAAAA,KAACS,EAAAA,EAAKE,MAAK,CAACV,UAAU,OAAOW,UAAU,6BAA4BV,UACjEF,EAAAA,EAAAA,KAACS,EAAAA,EAAKI,QAAO,CACXC,KAAK,SACLvB,MAAO,SACPU,UAAU,kCAQ1B,C","sources":["Components/Validations/UserValidtaion.js","Components/Register/Register.jsx"],"sourcesContent":["import * as yup from 'yup'\r\nexport const userSchema = yup.object().shape({\r\n    name:yup.string().required(),\r\n    email:yup.string().email().required(),\r\n    password:yup.string().min(4).max(10).required(),\r\n})","import \"./Register.css\";\r\nimport photo from \"./pexels-life-of-pix-67468.jpg\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { userSchema } from \"../Validations/UserValidtaion\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { adduser } from \"../../Redux/userSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  let x = useSelector((state) => state.user);\r\n  let dispatch = useDispatch();\r\n  const creatUse = async (event) => {\r\n    event.preventDefault();\r\n    let user = {\r\n      name: event.target[0].value,\r\n      email: event.target[1].value,\r\n      password: event.target[2].value,\r\n      FavMeals:[]\r\n    };\r\n    const isValid = await userSchema.isValid(user);\r\n    if (isValid) {\r\n      dispatch(adduser(user));\r\n      navigate(\"/login\");\r\n    }\r\n   \r\n\r\n    \r\n  };\r\n\r\n \r\n  return (\r\n    <div className=\"registerParen   overflow-hidden d-flex justify-content-center align-items-center\">\r\n      <div className=\"registerCard  d-flex flex-column flex-md-row\">\r\n        <div className=\"registerImg \">\r\n          <img src={photo} alt=\"registerImg\" width={\"100%\"} height={\"100%\"} />\r\n        </div>\r\n        <div className=\"RegisterForm bg-white  d-flex flex-column justify-content-center align-items-center\">\r\n          <h3>Register</h3>\r\n          <Form\r\n            onSubmit={creatUse}\r\n            className=\"d-flex flex-column justify-content-center align-items-center p-2\"\r\n          >\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"UserName\"\r\n                name=\"username\"\r\n                className=\"bg-dark inputData\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput2\">\r\n              <Form.Control\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"EmailAddress@g**.com\"\r\n                className=\"bg-dark inputData\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput3\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"password\"\r\n                className=\"bg-dark inputData\"\r\n                autoComplete=\"password\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput4 \">\r\n              <Form.Control\r\n                type=\"submit\"\r\n                value={\"submit\"}\r\n                className=\"bg-dark inputData\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Register;\r\n"],"names":["userSchema","yup","shape","name","required","email","password","min","max","navigate","useNavigate","dispatch","useSelector","state","user","useDispatch","creatUse","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","wrap","_context","prev","next","preventDefault","target","value","FavMeals","isValid","sent","adduser","stop","_x","apply","arguments","_jsx","className","children","_jsxs","src","photo","alt","width","height","Form","onSubmit","Group","controlId","Control","type","placeholder","autoComplete"],"sourceRoot":""}